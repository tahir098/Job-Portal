@page
@model RegisterModel
@{
    ViewData["Title"] = "Register";
}

<meta name="google-signin-client_id" content="534148046721-q46r0mirkp9ctp475s8gsa8avo6ep36s.apps.googleusercontent.com">

<h1>@ViewData["Title"]</h1>

<div class="row">
    <div class="col-md-4">
        <form asp-route-returnUrl="@Model.ReturnUrl" method="post">
            <h4>Create a new account.</h4>
            <hr />
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.Email"></label>
                <input asp-for="Input.Email" class="form-control" />
                <span asp-validation-for="Input.Email" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.Password"></label>
                <input asp-for="Input.Password" class="form-control" />
                <span asp-validation-for="Input.Password" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Input.ConfirmPassword"></label>
                <input asp-for="Input.ConfirmPassword" class="form-control" />
                <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
            </div>
            <button type="submit" class="btn btn-primary">Register</button>
        </form>
    </div>
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h4>Use another service to register.</h4>
            <hr />

            <div class="g-signin2" data-onsuccess="onSignIn"></div>

        </section>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script>

        gapi.load('auth2', function () {
            gapi.auth2.init();
        });

        function onSignIn(googleUser) {
            var profile = googleUser.getBasicProfile();
            console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.
            console.log('Name: ' + profile.getName());
            console.log('Image URL: ' + profile.getImageUrl());
            console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.
        }

        var id_token = googleUser.getAuthResponse().id_token;
        console.log("ID Token: " + id_token);

       
    </script>
}
